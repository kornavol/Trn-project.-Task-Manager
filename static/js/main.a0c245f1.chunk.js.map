{"version":3,"sources":["components/Tasks/Tasks.jsx","components/Timer/Timer.jsx","components/AuthIcons.jsx","components/login/SignIn.jsx","components/login/SignUp.jsx","pages/Auth.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Task","props","className","onSubmit","taskAdder","id","type","defaultValue","value","taskState","Timer","timer","time","normTime","Math","floor","btn","onClick","clickStopB","clickStartB","AuthIcons","toggle","authChecker","styles","authIcons","display","flexDirection","flexWrap","h6","margin","cursor","btnClicker","e","style","Login","useState","msg","setMsg","inputTypePasswd","setInputTypePasswd","preventDefault","data","email","target","pass","options","method","headers","body","JSON","stringify","fetch","then","result","json","output","status","statusChecker","message","name","placeholder","href","SignUp","console","log","firstName","secondName","setTimeout","Authorization","element","initBtn","condition","setBtn","App","start","useRef","counter","routing","tasks","setTasks","setTaskState","setTime","auth","setAuth","statusChanger","newTasks","forEach","item","showTasks","map","title","currentTime","period","useEffect","interval","setInterval","prevTime","clearInterval","current","Date","now","taskTitle","newTask","length","push","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0c245f1.chunk.js","sourcesContent":["import \"./Tasks.css\";\r\n\r\nexport default function Task(props) {\r\n  return (\r\n    <div className=\"tasks\">\r\n      <form className=\"task-form\" onSubmit={props.taskAdder}>\r\n        {/* <label>New Task</label> */}\r\n        <input id=\"task-input\" type=\"text\" defaultValue=\"add new task\" />\r\n        <input className=\"add-button\" type=\"submit\" value=\"Add\" />\r\n      </form>\r\n      {props.taskState}\r\n      <br />\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import \"./Time.css\";\r\n\r\nexport default function Timer(props) {\r\n  let timer = props.time;\r\n\r\n  /* change ms to normal outlook */\r\n  let days = Math.floor(timer / (1000 * 60 * 60 * 24));\r\n  let hours = Math.floor((timer % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  let minutes = Math.floor((timer % (1000 * 60 * 60)) / (1000 * 60));\r\n  let seconds = Math.floor((timer % (1000 * 60)) / 1000);\r\n\r\n  let normTime = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\r\n\r\n  if (timer === 0) {\r\n    normTime = \"0d 0h 0m 0s\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"timer\">\r\n        <div className=\"time\">{normTime}</div>\r\n\r\n        <div>\r\n          {props.btn ? (\r\n            <button\r\n              id=\"stopBtn\"\r\n              className=\"button form-button5 time-button\"\r\n              onClick={props.clickStopB}\r\n            >\r\n              Stop\r\n            </button>\r\n          ) : (\r\n            <button\r\n              id=\"srtBtn\"\r\n              className=\"button form-button5 time-button\"\r\n              onClick={props.clickStartB}\r\n            >\r\n              Start\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// import Auth from '../pages/Auth.jsx'\r\n\r\n// import {useState} from 'react'\r\n\r\nexport default function AuthIcons({toggle, authChecker}) {\r\n  const styles = {\r\n    authIcons: { display: \"flex\", flexDirection: \"row\", flexWrap: \"nowrap\" },\r\n    h6: {margin:'1rem', cursor: \"pointer\"}\r\n  };\r\n\r\n  function btnClicker (e) {\r\n    toggle();\r\n    authChecker(e)\r\n  }\r\n\r\n  return (\r\n    <div style={styles.authIcons}>\r\n    <h6 id=\"sign-in\" onClick={btnClicker} style={styles.h6}>Sign In</h6>\r\n    <h6 id=\"sign-up\" onClick={btnClicker} style={styles.h6}>Sign Up</h6>\r\n  </div>\r\n\r\n  );\r\n}\r\n","import './Login.css'\r\n// import userLogo from '../assets/userLogo-2.png'\r\n\r\nimport {useState} from 'react';\r\n\r\nexport default function Login(props) {\r\n\r\n       \r\n    const [msg, setMsg] = useState('')\r\n   \r\n\r\n    /* Find a button over Event. The target is an id of button. We don't use a name or value because they can be changed f.e. translator  */\r\n    let submitHandler = (e) => {\r\n        e.preventDefault();\r\n        let data = {};\r\n\r\n        data.email = e.target[0].value;\r\n        data.pass = e.target[1].value;\r\n\r\n        //console.log(e.target);\r\n        let url = \"https://auth404.herokuapp.com/api/auth/login\";\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n\r\n        fetch(url, options).then(result => result.json().then(output => {\r\n            let status = output.status;\r\n            /* for send stats to App.js  */\r\n            props.statusChecker(status);\r\n            /* show a warning */\r\n            if (status == 'failed') {\r\n                /* This structure kinda reset a text for show aan animation */\r\n                setMsg('')\r\n                /* assign element instead just massage_, because wanna reveal text with animation  */\r\n                setMsg(<h4 className=\"fadeIn color-yellow\">{output.message}</h4>)\r\n            }\r\n        }));       \r\n    }\r\n\r\n    const [inputTypePasswd, setInputTypePasswd] = useState(['password', 'show', 'show-btn-show'])\r\n\r\n    function showPass(e) {\r\n        e.preventDefault();\r\n\r\n        if (e.target.id === 'show-btn-show') {\r\n            setInputTypePasswd(['text', 'hide', 'show-btn-hide']);\r\n\r\n        } else if (e.target.id === 'show-btn-hide') {\r\n            setInputTypePasswd(['password', 'show', 'show-btn-show']);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper fadeInDown\">\r\n            {/* <h4 className=\"fadeIn fourth\">{msg}</h4> */}\r\n            {msg}\r\n            <div className=\"formContent\">\r\n\r\n                {/* Tabs Titles */}\r\n                <h2 className=\"active\"> Sign In </h2>\r\n                <h2 onClick={props.toggle} className=\"inactive underlineHover\">Sign Up </h2>\r\n                {/* Icon */}\r\n                {/* <div id='userLogo' className=\"fadeIn first\">\r\n                    <img className=\"userLogo\" src={userLogo} id=\"icon\" alt=\"User Icon\" />\r\n                </div> */}\r\n                {/* Login Form */}\r\n                <form className=\"login\" onSubmit={submitHandler}>\r\n                    {/*  type -= email screw up my outlook */}\r\n                    {/* <input type=\"email\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"login\" /> */}\r\n                    <input type=\"email\" id=\"login\" className=\"fadeIn first\" name=\"login\" placeholder=\"login\" />\r\n                    <div className =\"password\">\r\n                        <input type={inputTypePasswd[0]} id=\"password\" className=\"short-psw fadeIn second\" name=\"login\" placeholder=\"password\" />\r\n                        <input type=\"button\" id={inputTypePasswd[2]} className=\"fadeIn second\" onClick={showPass} name=\"test\" value={inputTypePasswd[1]} />\r\n                    </div>\r\n                    <input id=\"LogIn\" type=\"submit\" className=\"fadeIn third\" defaultValue=\"Log In\" />\r\n                </form>\r\n                {/* Remind Password */}\r\n                <div className=\"formFooter\">\r\n                    <a className=\"underlineHover\" href=\"#\">Forgot Password?</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './Login.css'\r\n// import userLogo from '../assets/userLogo-2.png'\r\n\r\nimport { useState } from 'react';\r\n\r\nexport default function SignUp(props) {\r\n    \r\n\r\n    const [msg, setMsg] = useState('')\r\n\r\n    /* Find a button over Event. The target is an id of button. We don't use a name or value because they can be changed f.e. translator  */\r\n    let submitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log('submitHandler is running');\r\n\r\n        let data = {};\r\n        let firstName = e.target[0].value;\r\n        let secondName = e.target[1].value;\r\n        data.name = `${firstName} ${secondName}`\r\n        data.email = e.target[2].value;\r\n        data.pass = e.target[3].value;\r\n\r\n        let url = \"https://auth404.herokuapp.com/api/auth/register\";\r\n        let options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n\r\n        fetch(url, options).then(result => result.json().then(output => {\r\n            // console.log(output);\r\n            let status = output.status;\r\n            if (status == 'failed') {\r\n                setMsg('')\r\n                /* assign element instead just massage_, because wanna reveal text with animation  */\r\n                setMsg(<h4 className=\"fadeIn color-yellow\">{'this email is already in use. Please try another'}</h4>)\r\n\r\n            } else if (status == 'success') {\r\n                setMsg('')\r\n                /* assign element instead just massage_, because wanna reveal text with animation  */\r\n                setMsg(<h4 className=\"fadeIn color-white\">{output.message}</h4>)\r\n            }\r\n            /* Delay to show a customer a message  */\r\n            setTimeout(() => props.statusChecker(status), 4000);\r\n\r\n        }))\r\n    }\r\n\r\n\r\n    const [inputTypePasswd, setInputTypePasswd] = useState(['password', 'show', 'show-btn-show'])\r\n\r\n    function showPass(e) {\r\n        e.preventDefault();\r\n\r\n        if (e.target.id === 'show-btn-show') {\r\n            setInputTypePasswd(['text', 'hide', 'show-btn-hide']);\r\n\r\n        } else if (e.target.id === 'show-btn-hide') {\r\n            setInputTypePasswd(['password', 'show', 'show-btn-show']);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"wrapper fadeInDown\">\r\n            {msg}\r\n            <div className=\"formContent\">\r\n                {/* Tabs Titles */}\r\n                <h2 onClick={props.toggle} className=\"inactive underlineHover\"> Sign In </h2>\r\n                <h2 className=\"active\">Sign Up </h2>\r\n                {/* Icon */}\r\n                {/* <div className=\"fadeIn first \">\r\n                    <img className=\"userLogo\" src={userLogo} id=\"icon\" alt=\"User Icon\" />\r\n                </div> */}\r\n                {/* Login Form */}\r\n                <form className=\"login\" onSubmit={submitHandler}>\r\n                    <input type=\"text\" id=\"first name \" className=\"fadeIn second\" name=\"login\" placeholder=\"first name\" />\r\n                    <input type=\"text\" id=\"last name\" className=\"fadeIn second\" name=\"login\" placeholder=\"last name\" />\r\n                    <input type=\"email\" id=\"login\" className=\"fadeIn second\" name=\"login\" placeholder=\"login\" />\r\n                    <div className =\"password\">\r\n                        <input type={inputTypePasswd[0]} id=\"password\" className=\"short-psw fadeIn third\" name=\"login\" placeholder=\"password\" />\r\n                        <input type=\"button\" id={inputTypePasswd[2]} className=\"fadeIn third\" onClick={showPass} name=\"test\" value={inputTypePasswd[1]} />\r\n                    </div>\r\n                    <input type=\"submit\" className=\"fadeIn fourth\" defaultValue=\"Sign Up\" />\r\n                </form>\r\n                {/* Remind Password */}\r\n                <div className=\"formFooter\">\r\n                    {/* <a className=\"underlineHover\" href=\"#\">Forgot Password?</a> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import SignIn from \"../components/login/SignIn.jsx\";\r\nimport SignUp from \"../components/login/SignUp.jsx\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nexport default function Authorization({ condition }) {\r\n  let initBtn = condition;\r\n  let element;\r\n\r\n  if (initBtn === \"SignIn\") {\r\n    element = (\r\n      <SignIn\r\n        toggle={toggle}\r\n        // statusChecker = {props.statusChecker}\r\n      />\r\n    );\r\n  } else if (initBtn === \"SignUp\")\r\n    element = (\r\n      <SignUp\r\n        toggle={toggle}\r\n        // statusChecker = {props.statusChecker}\r\n      />\r\n    );\r\n\r\n  const [btn, setBtn] = useState(element);\r\n\r\n  function toggle() {\r\n    if (initBtn == \"SignUp\") {\r\n      setBtn(\r\n        <SignUp\r\n          toggle={toggle}\r\n          // statusChecker = {props.statusChecker}\r\n        />\r\n      );\r\n      initBtn = \"SignIn\";\r\n    } else if (initBtn == \"SignIn\") {\r\n      setBtn(\r\n        <SignIn\r\n          toggle={toggle}\r\n          // statusChecker = {props.statusChecker}\r\n        />\r\n      );\r\n      initBtn = \"SignUp\";\r\n    }\r\n  }\r\n\r\n  return btn;\r\n}\r\n","/* \r\nVersion where I tried to use setTaskState \r\nIssue #1: setTime from setTaskState don't work properly\r\n*/\r\n\r\nimport \"./App.css\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\n// import Name from \"./components/Name.jsx\";\r\nimport Task from \"./components/Tasks/Tasks.jsx\";\r\nimport Timer from \"./components/Timer/Timer.jsx\";\r\nimport AuthIcons from \"./components/AuthIcons.jsx\";\r\nimport Auth from \"./pages/Auth.jsx\";\r\n\r\nfunction App() {\r\n  const start = useRef(0);\r\n  const counter = useRef(1);\r\n  const routing = useRef(true);\r\n\r\n  // ?\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const [taskState, setTaskState] = useState(\"\"); /* adding task to a DOM */\r\n  const [time, setTime] = useState(0); /* for change time on a page */\r\n  const [btn, setBtn] = useState(false); /*  rendering a current button */\r\n  const [\r\n    auth,\r\n    setAuth,\r\n  ] = useState(); /*  rendering an auth.form with current state */\r\n\r\n  /* Action on a start btn.  */\r\n  let clickStartB = (e) => {\r\n    setBtn((btn) => !btn);\r\n    start.current = Date.now();\r\n  };\r\n\r\n  /* Action on a stop btn. Compute a period, update period into array and update time of current task   */\r\n  let clickStopB = (e) => {\r\n    setBtn((btn) => !btn);\r\n    let end = Date.now();\r\n    let period = end - start.current;\r\n\r\n    /* It's a good approach */\r\n    let newTasks = [...tasks];\r\n    newTasks.forEach((item) => {\r\n      if (item.status === \"active\") {\r\n        item.period += period;\r\n        return null;\r\n      }\r\n    });\r\n    setTasks(newTasks);\r\n    console.log(tasks);\r\n  };\r\n\r\n  /* Change status on 'active' if was click on a task. */\r\n  let statusChanger = (e) => {\r\n    let newTasks = [...tasks];\r\n    newTasks.forEach((item) => {\r\n      if (item.status === \"active\") {\r\n        item.status = \"\";\r\n        return null;\r\n      }\r\n    });\r\n\r\n    newTasks.forEach((item) => {\r\n      if (item.id === e.target.id) {\r\n        item.status = \"active\";\r\n        console.log(\"statusChanger-task\", tasks);\r\n        return null;\r\n      }\r\n    });\r\n    setTasks(newTasks);\r\n\r\n    setTaskState(showTasks);\r\n\r\n    setTime(timer);\r\n  };\r\n\r\n  /* !Tasks rendering */\r\n\r\n  let showTasks = () =>\r\n    tasks.map((item) => {\r\n      if (item.status === \"active\") {\r\n        return (\r\n          <div\r\n            key={item.id}\r\n            className=\"task active\"\r\n            onClick={statusChanger}\r\n            id={item.id}\r\n          >\r\n            <p>{item.title}</p>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div key={item.id} className=\"task\" onClick={statusChanger}>\r\n            <p id={item.id}>{item.title}</p>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n  /* Adding new tasks on a page at click on an add button. New task became automate active */\r\n  let taskAdder = (e) => {\r\n    // NOT WORKING WITH setTasks. Because setTaskState don't see update from setTasks\r\n\r\n    e.preventDefault();\r\n\r\n    let taskTitle = e.target[0].value;\r\n    let id = taskTitle + counter.current;\r\n\r\n    // let newTasks = [...tasks];\r\n\r\n    tasks.forEach((item) => {\r\n      if (item.status === \"active\") {\r\n        item.status = \"\";\r\n        return null;\r\n      }\r\n    });\r\n\r\n    let newTask = {\r\n      title: taskTitle,\r\n      id: id,\r\n      status: \"active\",\r\n      period: 0,\r\n    };\r\n\r\n    if (taskTitle.length === 0 || taskTitle === \"add new task\") {\r\n      newTask.title = \"NewTask-\" + counter.current;\r\n      counter.current++;\r\n    }\r\n\r\n    tasks.push(newTask);\r\n    // setTasks(newTasks);\r\n    setTime(timer);\r\n    setTaskState(showTasks);\r\n  };\r\n\r\n  /* Show time  */\r\n  let timer = () => {\r\n    let currentTime = 0;\r\n\r\n    let newTasks = [...tasks];\r\n    tasks.forEach((item) => {\r\n      if (item.status === \"active\") {\r\n        currentTime = item.period;\r\n        return null;\r\n      }\r\n    });\r\n\r\n    setTasks(newTasks);\r\n\r\n    return currentTime;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n    if (btn) {\r\n      interval = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 1000);\r\n      }, 1000);\r\n    }\r\n    // else {\r\n    //   clearInterval(interval);\r\n    // }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [btn]);\r\n\r\n  function authChecker(e) {\r\n    if (e.target.id === \"sign-in\") {\r\n      setAuth(<Auth condition={\"SignIn\"} />);\r\n    } else if (e.target.id === \"sign-up\") {\r\n      setAuth(<Auth condition={\"SignUp\"} />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {routing.current ? (\r\n        <div className=\"main\">\r\n          <AuthIcons\r\n            toggle={() => (routing.current = false)}\r\n            authChecker={authChecker}\r\n          />\r\n          <br />\r\n          <Timer\r\n            time={time}\r\n            btn={btn}\r\n            clickStartB={clickStartB}\r\n            clickStopB={clickStopB}\r\n          />\r\n          <Task taskAdder={taskAdder} taskState={taskState} />\r\n        </div>\r\n      ) : (\r\n        auth\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.jsx\";\r\nimport App1 from \"./AppTest.js\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}